var Scheduler=function(e){"use strict";class t{schedule(e){}delay(e,t){}}const n=(t,n,c)=>{const s=new e.BooleanCancellable;return"function"==typeof n?t(()=>c(s)):s.cancel(),s},c=e=>t=>n(e,t,e=>e.cancel()&&t()),s=e=>(t,c)=>n(e,t,e=>{if(e.cancelled)return;const n=setTimeout(()=>e.cancel()&&t(),c);e.addEventListener("cancel",()=>clearTimeout(n))});let r;const a=e=>requestAnimationFrame(e),i=c(a),l=s(a);class u extends t{static get instance(){return void 0===r&&(r=new u),r}schedule(e){return i(e)}delay(e,t){return l(e,t)}}let d;const o=e=>Promise.resolve().then(e),g=c(o),m=s(o);class h extends t{static get instance(){return void 0===d&&(d=new h),d}schedule(e){return g(e)}delay(e,t){return m(e,t)}}let v;const y=e=>setTimeout(e,0),f=c(y),w=s(y);class x extends t{static get instance(){return void 0===v&&(v=new x),v}schedule(e){return f(e)}delay(e,t){return w(e,t)}}let T;const b=e=>e(),C=c(b),p=s(b);class q extends t{static get instance(){return void 0===T&&(T=new q),T}schedule(e){return C(e)}delay(e,t){return p(e,t)}}return class{static get interface(){return t}static get current(){return q.instance}static get immediate(){return u.instance}static get async(){return h.instance}static get timeout(){return x.instance}}}(rxCancellable);