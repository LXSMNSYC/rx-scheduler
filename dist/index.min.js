var Scheduler=function(e){"use strict";class t{schedule(e){}delay(e,t){}}const n=(e,t)=>{try{e()}finally{t.cancel()}},c=(t,n,c)=>{const s=new e.BooleanCancellable;return"function"==typeof n?t(()=>c(s)):s.cancel(),s},s=e=>t=>c(e,t,e=>!e.cancelled&&n(t,e)),r=e=>(t,s)=>c(e,t,e=>{if(!e.cancelled)if("number"==typeof s&&s>0){const c=setTimeout(()=>!e.cancelled&&n(t,e),s);e.addEventListener("cancel",()=>clearTimeout(c))}else n(t,e)});let a;const l=e=>requestAnimationFrame(e),i=s(l),u=r(l);class d extends t{static get instance(){return void 0===a&&(a=new d),a}schedule(e){return i(e)}delay(e,t){return u(e,t)}}let o;const m=e=>Promise.resolve().then(e),y=s(m),g=r(m);class f extends t{static get instance(){return void 0===o&&(o=new f),o}schedule(e){return y(e)}delay(e,t){return g(e,t)}}let h;const v=e=>setTimeout(e,0),w=s(v),x=r(v);class b extends t{static get instance(){return void 0===h&&(h=new b),h}schedule(e){return w(e)}delay(e,t){return x(e,t)}}let T;const p=e=>e(),C=s(p),q=r(p);class A extends t{static get instance(){return void 0===T&&(T=new A),T}schedule(e){return C(e)}delay(e,t){return q(e,t)}}return class{static get interface(){return t}static get current(){return A.instance}static get immediate(){return d.instance}static get async(){return f.instance}static get timeout(){return b.instance}}}(Cancellable);