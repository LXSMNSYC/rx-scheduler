var Scheduler=function(e){"use strict";class t{schedule(e){}delay(e,t){}}const n=(t,n,c)=>{const s=new e.BooleanCancellable;return"function"==typeof n?t(()=>c(s)):s.cancel(),s},c=e=>t=>n(e,t,e=>!e.cancelled&&t()&&e.cancel()),s=e=>(t,c)=>n(e,t,e=>{if(!e.cancelled)if("number"==typeof c&&c>0){const n=setTimeout(()=>!e.cancelled&&t()&&e.cancel(),c);e.addEventListener("cancel",()=>clearTimeout(n))}else t(),e.cancel()});let r;const a=e=>requestAnimationFrame(e),l=c(a),i=s(a);class u extends t{static get instance(){return void 0===r&&(r=new u),r}schedule(e){return l(e)}delay(e,t){return i(e,t)}}let d;const o=e=>Promise.resolve().then(e),m=c(o),g=s(o);class y extends t{static get instance(){return void 0===d&&(d=new y),d}schedule(e){return m(e)}delay(e,t){return g(e,t)}}let f;const h=e=>setTimeout(e,0),v=c(h),w=s(h);class x extends t{static get instance(){return void 0===f&&(f=new x),f}schedule(e){return v(e)}delay(e,t){return w(e,t)}}let b;const T=e=>e(),p=c(T),C=s(T);class q extends t{static get instance(){return void 0===b&&(b=new q),b}schedule(e){return p(e)}delay(e,t){return C(e,t)}}return class{static get interface(){return t}static get current(){return q.instance}static get immediate(){return u.instance}static get async(){return y.instance}static get timeout(){return x.instance}}}(Cancellable);